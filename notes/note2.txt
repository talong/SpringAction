1.Spring已经测试可以使用，接下来搭建及测试SpringMVC；
2.配置DispatcherServlet(Java方式配置);
  涉及三个类：WebConfig  RootConfig  SpringMVCBookWebAppInitializer
  WebConfig 负责Web组件的bean，如控制器、视图解析器以及处理器映射，而RootConfig负责非Web组件，如驱动应用后端的中间层和数据层组件。
  额外需要注意的是，SpringMVCBookWebAppInitializer一旦继承AbstractAnnotationConfigDispatcherServletInitializer，就需要手动引入servlet-api.jar，Maven无法起作用，原因暂时不明。
  使用mock Spring MVC测试控制器，如类EmailControllerTest。
  注意：完全按照书中类编写是会报错的，常常出现缺少方法的类前缀，如MockMvcResultMatchers.model()只写model()；
3.Spring提供了多种方式将异常转换为响应：
  特定的Spring议程将会自动映射为指定的HTTP状态码；
  异常上可以添加@ResponseStatus注解，从而将其映射为某一个HTTP状态码；
  在方法上可以添加@ExceptionHandler注解，使其用来处理异常；
  所有RuntimeException的派生类都是非检查型异常，与检查型异常相对抛出非检查型异常可以不在函数声明中添加throws语句，调用函数上也不需要强制处理。
  所有不是RuntimeException派生的Exception都是检查型异常。当函数中存在抛出检查型异常的操作时该函数的函数声明中必须包含throws语句。调用改函数的函数也必须对该异常进行处理，如不进行处理则必须在调用函数上声明throws语句。
