1.构建Maven项目grab-class

2.对于第三方库，没有办法在它的类上加@Component和@Autowired注解，因此不能使用自动化装配方案，故

使用安全性和扩展性更好更灵活的Java显示装配方式。

  注：尽量强依赖使用构造器注入，可选依赖使用属性注入。

3.Spring框架的核心是Spring容器。容器负责管理应用中组件的生命周期，它会创建这些组件并保证它们的依赖得到满足。

4.如果你的AOP需求超过了简单的方法调用（如构造器或属性拦截就超过了），那么你需要考虑Aspectj来实现切面。（原因应该是

Spring AOP是基于接口或CGLib动态代理的实现方式，需要看看具体的实现代码）

5.在Spring中，注解和自动代理提供了便利的方式来创建切面，但面向注解的切面声明有一个明显的劣势：你必须能够对通知类添

加注解（此时无法应对没有源代码的情况），因此，Spring提供了另外一种方案：XML.

6.Servlet3规范以下的Servlet容器不支持使用Java方式的DispatcherServlet配置。



















